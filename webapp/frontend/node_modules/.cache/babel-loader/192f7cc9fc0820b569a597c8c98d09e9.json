{"ast":null,"code":"var _jsxFileName = \"/Users/saikathika/Documents/webapp/frontend/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\"; // import queryString from 'query-string';\n// import io from \"socket.io-client\";\n// import TextContainer from '../TextContainer/TextContainer';\n// import Messages from '../Messages/Messages';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n// import './Chat.css';\n// const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n// let socket;\n// const Chat = ({ location }) => {\n//   const [name, setName] = useState('');\n//   const [room, setRoom] = useState('');\n//   const [users, setUsers] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   useEffect(() => {\n//     const { name, room } = queryString.parse(location.search);\n//     socket = io(ENDPOINT);\n//     setRoom(room);\n//     setName(name)\n//     socket.emit('join', { name, room }, (error) => {\n//       if(error) {\n//         alert(error);\n//       }\n//     });\n//   }, [ENDPOINT, location.search]);\n//   useEffect(() => {\n//     socket.on('message', message => {\n//       setMessages(messages => [ ...messages, message ]);\n//     });\n//     socket.on(\"roomData\", ({ users }) => {\n//       setUsers(users);\n//     });\n// }, []);\n//   const sendMessage = (event) => {\n//     event.preventDefault();\n//     if(message) {\n//       socket.emit('sendMessage', message, () => setMessage(''));\n//     }\n//   }\n//   return (\n//     <div className=\"outerContainer\">\n//       <div className=\"container\">\n//           <InfoBar room={room} />\n//           <Messages messages={messages} name={name} />\n//           <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//       </div>\n//       <TextContainer users={users}/>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/saikathika/Documents/webapp/frontend/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","Chat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,I;AAGN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import queryString from 'query-string';\n// import io from \"socket.io-client\";\n\n// import TextContainer from '../TextContainer/TextContainer';\n// import Messages from '../Messages/Messages';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n\n// import './Chat.css';\n\n// const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n\n// let socket;\n\n// const Chat = ({ location }) => {\n//   const [name, setName] = useState('');\n//   const [room, setRoom] = useState('');\n//   const [users, setUsers] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   useEffect(() => {\n//     const { name, room } = queryString.parse(location.search);\n\n//     socket = io(ENDPOINT);\n\n//     setRoom(room);\n//     setName(name)\n\n//     socket.emit('join', { name, room }, (error) => {\n//       if(error) {\n//         alert(error);\n//       }\n//     });\n//   }, [ENDPOINT, location.search]);\n\n//   useEffect(() => {\n//     socket.on('message', message => {\n//       setMessages(messages => [ ...messages, message ]);\n//     });\n\n//     socket.on(\"roomData\", ({ users }) => {\n//       setUsers(users);\n//     });\n// }, []);\n\n//   const sendMessage = (event) => {\n//     event.preventDefault();\n\n//     if(message) {\n//       socket.emit('sendMessage', message, () => setMessage(''));\n//     }\n//   }\n\n//   return (\n//     <div className=\"outerContainer\">\n//       <div className=\"container\">\n//           <InfoBar room={room} />\n//           <Messages messages={messages} name={name} />\n//           <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//       </div>\n//       <TextContainer users={users}/>\n//     </div>\n//   );\n// }\nconst Chat = () => {\n  return <h1>Chat </h1>;\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}